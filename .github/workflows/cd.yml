name: CD - Release Docker Image

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: yandex-terraform

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Git tag
        id: git-tag
        run: |
          # Get the latest tag or create a version based on commit
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "version=${LATEST_TAG#v}" >> $GITHUB_OUTPUT

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.git-tag.outputs.version }}
            type=raw,value=latest
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.git-tag.outputs.version }}
          output: ${{ env.IMAGE_NAME }}-${{ steps.git-tag.outputs.version }}.spdx.json
          output-format: spdx-json

      - name: Upload SBOM as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ steps.git-tag.outputs.version }}
          path: ${{ env.IMAGE_NAME }}-${{ steps.git-tag.outputs.version }}.spdx.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.git-tag.outputs.tag }}
          name: Release ${{ steps.git-tag.outputs.version }}
          body: |
            Published Docker image:
            `${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.git-tag.outputs.version }}`

            Includes SBOM (SPDX) attached.
          files: ${{ env.IMAGE_NAME }}-${{ steps.git-tag.outputs.version }}.spdx.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Docker Hub Description
        run: |
          curl -X PATCH https://hub.docker.com/v2/repositories/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}/ \
               -H "Authorization: Bearer ${{ secrets.DOCKERHUB_TOKEN }}" \
               -H "Content-Type: application/json" \
               -d '{
                     "description": "Docker container for Yandex Cloud infrastructure management with Terraform",
                     "full_description": "$(cat README.md | sed 's/\"/\\\"/g')",
                     "category": "infrastructure"
                   }'
        env:
          DOCKERHUB_API_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
